plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
    id "jacoco"
    id "com.github.kt3k.coveralls" version "2.8.2"
    id "maven-publish"
}

group 'org.slk'
version '1.0.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "com.google.guava:guava:27.0.1-jre"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "org.antlr:antlr4-runtime:4.7.2"
    compile "org.atteo:evo-inflector:1.2.2"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    excludes: [
                            '**/clausewitz/antlr/**',
                            '**/clausewitz/parser/**',
                            '**/clausewitz/hoi4/types/**'
                            
                    ]
            )
        })
    }
}

coveralls {
    sourceDirs += ['src/main/kotlin']
    jacocoReportPath "build/reports/jacoco/test/jacocoTestReport.xml"
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom.withXml {
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'compile'
                }
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenPublication {
        destination = file("$buildDir/libs/${rootProject.name}-${version}.pom")
    }
}